- block:
  - name: Ensure docker daemon is started and enabled
    systemd:
      name: docker
      enabled: true
      state: 'started'

  # Copy required files
  - name: Copy required files
    become: true
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    loop:
#      - { src: "docker-compose.yml", dest: "/opt/logstash/" }
      - { src: "{{ '../../files/' + hostvars[inventory_hostname]['ssl_truststore_file'] }}", dest: "/opt/logstash/" }

  # Copy the filebeat.yml
  - name: Copy Logstash template file
    become: true
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
      - { src: "beats-kafka.conf.j2", dest: "/opt/logstash/beats-kafka.conf" }
      - { src: "logstash-docker.yml.j2", dest: "/opt/logstash/logstash-docker.yml" }
      - { src: "docker-compose.yml.j2", dest: "/opt/logstash/docker-compose.yml" }

  - name: Find Docker Compose version
    shell: docker compose version --short
    register: docker_compose_version
    ignore_errors: True


  - block:
    - name: Start Logstash
      community.docker.docker_compose:
        project_src: /opt/logstash/
        state: present
        restarted: true
        debug: false
      register: output

    - name: Check if service is running
      ansible.builtin.assert:
        that:
          - "output.services.logstash.fabric_logstash.state.running"
  
    when: 
      - docker_compose_version is defined
      - "docker_compose_version.stdout is version('2.18.0','<')"

  - block:
    - name: Start Logstash
      community.docker.docker_compose_v2:
        project_src: /opt/logstash/
        state: present
        pull: always
        build: always
        recreate: always
      register: output

    - name: Check if service is running
      ansible.builtin.assert:
        that:
          - logstash_container.State == "running"
      vars:
        logstash_container: >-
          {{ output.containers | selectattr("Service", "equalto", "logstash") | first }}

    when: 
      - docker_compose_version is defined 
      - "docker_compose_version.stdout is version('2.18.0','>=')"

  when: component_type == 'head'